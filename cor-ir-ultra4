#include <AFMotor.h>
#include <Ultrasonic.h>

AF_DCMotor motor1(1);
AF_DCMotor motor2(4);
AF_DCMotor motor3(2);
AF_DCMotor motor4(3);

#define PinOUT1 34
#define PinS01 26
#define PinS11 27
#define PinS21 28
#define PinS31 29

#define PinOUT2 35
#define PinS02 30
#define PinS12 31
#define PinS22 32
#define PinS32 33

#define PinInfravermelho 36

Ultrasonic ultrassom(23, 22);

int red1, green1, blue1;
int red2, green2, blue2;
int infravermelho;

int prevRed1, prevGreen1, prevBlue1;
int prevRed2, prevGreen2, prevBlue2;
int prevInfravermelho;

long distancia;

const unsigned long stopDuration = 1000;
const int limiarDistancia = 20;

void setup() {
  Serial.begin(9600);

  motor1.setSpeed(0);
  motor2.setSpeed(0);
  motor3.setSpeed(0);
  motor4.setSpeed(0);
  pararMotores();

  pinMode(PinOUT1, INPUT);
  pinMode(PinS21, OUTPUT);
  pinMode(PinS31, OUTPUT);

  pinMode(PinOUT2, INPUT);
  pinMode(PinS22, OUTPUT);
  pinMode(PinS32, OUTPUT);

  pinMode(PinInfravermelho, INPUT);
}

void loop() {
  distancia = ultrassom.Ranging(CM);
  Serial.print("Distância: ");
  Serial.print(distancia);
  Serial.println(" cm");

  if (distancia <= limiarDistancia) {
    pararMotores();
    delay(stopDuration);
    desviar();
  } else {
    seguirLinha();
  }

  delay(100);
}

void seguirLinha() {
  lerSensoresDeCor();
  infravermelho = digitalRead(PinInfravermelho);

  // Decisão baseada na leitura atual e anterior dos sensores
  if (isIntersecao()) {
    if (isVerde(red1, green1, blue1) && isVerde(red2, green2, blue2)) {
      virarEm180();  // Situação 1: Verde nos dois sensores, virar 180 graus
    } else if (isBranco(red1, green1, blue1) && isVerde(red2, green2, blue2)) {
      virarDireita();  // Situação 2: Branco à esquerda, Verde à direita, virar à direita
    } else if (isVerde(red1, green1, blue1) && isBranco(red2, green2, blue2)) {
      virarEsquerda();  // Situação 3: Verde à esquerda, Branco à direita, virar à esquerda
    } else if (isPreto(red1, green1, blue1) && isPreto(red2, green2, blue2) &&
               isBranco(prevRed1, prevGreen1, prevBlue1) && isBranco(prevRed2, prevGreen2, prevBlue2)) {
      norte();  // Situação 4: Ambos Preto agora, ambos Branco antes, seguir em frente
    } else if (isBranco(red1, green1, blue1) && isPreto(red2, green2, blue2) &&
               isBranco(prevRed1, prevGreen1, prevBlue1) && isBranco(prevRed2, prevGreen2, prevBlue2)) {
      norte();  // Situação 6: Esquerda Branco, Direita Preto agora, ambos Branco antes, seguir em frente
    } else if (isPreto(red1, green1, blue1) && isBranco(red2, green2, blue2) &&
               isBranco(prevRed1, prevGreen1, prevBlue1) && isBranco(prevRed2, prevGreen2, prevBlue2)) {
      norte();  // Situação 7: Esquerda Preto, Direita Branco agora, ambos Branco antes, seguir em frente
    } else if (isVerde(red1, green1, blue1) && isBranco(red2, green2, blue2) &&
               isPreto(prevRed1, prevGreen1, prevBlue1) && isPreto(prevRed2, prevGreen2, prevBlue2)) {
      norte();  // Situação 8: Esquerda Verde, Direita Branco agora, ambos Preto antes, seguir em frente
    } else if (isBranco(red1, green1, blue1) && isVerde(red2, green2, blue2) &&
               isPreto(prevRed1, prevGreen1, prevBlue1) && isPreto(prevRed2, prevGreen2, prevBlue2)) {
      norte();  // Situação 9: Esquerda Branco, Direita Verde agora, ambos Preto antes, seguir em frente
    }
  } else {
    // Continuar a seguir a linha normalmente
    if (isPreto(red1, green1, blue1) && isPreto(red2, green2, blue2)) {
      norte();  // Ambos sensores leem preto
    } else if (isBranco(red1, green1, blue1) && isBranco(red2, green2, blue2)) {
      pararMotores();  // Ambos sensores leem branco
    } else if (isVerde(red1, green1, blue1)) {
      virarEsquerda();  // Esquerdo Verde
    } else if (isVerde(red2, green2, blue2)) {
      virarDireita();  // Direito Verde
    } else {
      norte();  // Seguir em frente
    }
  }

  // Atualizar valores anteriores
  prevRed1 = red1;
  prevGreen1 = green1;
  prevBlue1 = blue1;
  prevRed2 = red2;
  prevGreen2 = green2;
  prevBlue2 = blue2;
  prevInfravermelho = infravermelho;
}

void lerSensoresDeCor() {
  // Leitura do sensor 1
  digitalWrite(PinS21, LOW);
  digitalWrite(PinS31, LOW);
  red1 = pulseIn(PinOUT1, LOW);

  digitalWrite(PinS21, HIGH);
  digitalWrite(PinS31, HIGH);
  green1 = pulseIn(PinOUT1, LOW);

  digitalWrite(PinS21, LOW);
  digitalWrite(PinS31, HIGH);
  blue1 = pulseIn(PinOUT1, LOW);

  // Leitura do sensor 2
  digitalWrite(PinS22, LOW);
  digitalWrite(PinS32, LOW);
  red2 = pulseIn(PinOUT2, LOW);

  digitalWrite(PinS22, HIGH);
  digitalWrite(PinS32, HIGH);
  green2 = pulseIn(PinOUT2, LOW);

  digitalWrite(PinS22, LOW);
  digitalWrite(PinS32, HIGH);
  blue2 = pulseIn(PinOUT2, LOW);
}

bool isIntersecao() {
  return infravermelho == LOW;
}

bool isPreto(int red, int green, int blue) {
  return red > 25 && green > 25 && blue > 25;
}

bool isBranco(int red, int green, int blue) {
  return red < 10 && green < 10 && blue < 10;
}

bool isVerde(int red, int green, int blue) {
  return green < red && green < blue;
}

bool isVermelho(int red, int green, int blue) {
  return red < green && red < blue;
}

bool isAzul(int red, int green, int blue) {
  return blue < red && blue < green;
}

void desviar() {
  oeste();
  delay(1000);
  norte();
  delay(1000);
  leste();
  delay(1000);
  pararMotores();
}

void pararMotores() {
  motor1.run(RELEASE);
  motor2.run(RELEASE);
  motor3.run(RELEASE);
  motor4.run(RELEASE);
}

void norte() {
  motor1.run(FORWARD);
  motor2.run(FORWARD);
  motor3.run(FORWARD);
  motor4.run(FORWARD);
}

void virarEm180() {
  motor1.run(BACKWARD);
  motor2.run(FORWARD);
  motor3.run(FORWARD);
  motor4.run(BACKWARD);
  delay(1000);  // Ajuste o delay conforme necessário para uma rotação de 180 graus
  pararMotores();
}

void oeste() {
  motor1.run(BACKWARD);
  motor2.run(FORWARD);
  motor3.run(FORWARD);
  motor4.run(BACKWARD);
}

void leste() {
  motor1.run(FORWARD);
  motor2.run(BACKWARD);
  motor3.run(BACKWARD);
  motor4.run(FORWARD);
}

void virarEsquerda() {
  motor1.run(BACKWARD);
  motor2.run(FORWARD);
  motor3.run(FORWARD);
  motor4.run(BACKWARD);
}

void virarDireita() {
  motor1.run(FORWARD);
  motor2.run(BACKWARD);
  motor3.run(BACKWARD);
  motor4.run(FORWARD);
}
